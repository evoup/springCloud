<?xml version="1.0" encoding="UTF-8"?>
<included>

    <!--输出到debug-->
    <appender name="debug_sql_json" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <jsonFactoryDecorator class="com.keda.util.json.MyJsonFactoryDecorator"/>
            <providers class="net.logstash.logback.composite.loggingevent.LoggingEventJsonProviders">
                <pattern>
                    <pattern>
                        {
                        "service": "${SERVER_NAME:-}",
                        "local_ip": "%LOCAL_IP",
                        "timestamp": "%d{yyyy-MM-dd HH:mm:ss.SSS}",
                        "level": "%level",
                        "trace": "%X{X-B3-TraceId:-}",
                        "span": "%X{X-B3-SpanId:-}",
                        "parent": "%X{X-B3-ParentId:-}",
                        "exportable": "%X{X-Span-Export:-}",
                        "pid": "${PID:-}",
                        "thread": "%thread",
                        "class": "%class",
                        "line": "%line",
                        "method": "%method",
                        "message": "%message"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/sql/debug-druid-sql-%d{yyyyMMdd}.sjson</fileNamePattern>
        </rollingPolicy>
        <append>true</append>
        <filter class="ch.qos.logback.classic.filter.LevelFilter"><!-- 只打印DEBUG日志 -->
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!--输出到error-->
    <appender name="error_sql_json" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <jsonFactoryDecorator class="com.keda.util.json.MyJsonFactoryDecorator"/>
            <providers class="net.logstash.logback.composite.loggingevent.LoggingEventJsonProviders">
                <pattern>
                    <pattern>
                        {
                        "service": "${SERVER_NAME:-}",
                        "local_ip": "%LOCAL_IP",
                        "timestamp": "%d{yyyy-MM-dd HH:mm:ss.SSS}",
                        "level": "%level",
                        "trace": "%X{X-B3-TraceId:-}",
                        "span": "%X{X-B3-SpanId:-}",
                        "parent": "%X{X-B3-ParentId:-}",
                        "exportable": "%X{X-Span-Export:-}",
                        "pid": "${PID:-}",
                        "thread": "%thread",
                        "class": "%class",
                        "line": "%line",
                        "method": "%method",
                        "message": "%message"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/sql/error-druid-sql-%d{yyyyMMdd}.sjson</fileNamePattern>
        </rollingPolicy>
        <append>true</append>
        <filter class="ch.qos.logback.classic.filter.LevelFilter"><!-- 只打印ERROR日志 -->
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>







    <!--异步写入日志文件-->

    <appender name="async_debugSqlJson" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>512</queueSize>
        <!--设为0表示队列达到80%，也不丢弃任务-->
        <discardingThreshold>0</discardingThreshold>
        <!--日志上下文关闭后，AsyncAppender继续执行写任务的时间，单位毫秒-->
        <maxFlushTime>500</maxFlushTime>
        <!--队列满了直接丢弃要写的消息，不阻塞写入队列-->
        <neverBlock>false</neverBlock>
        <!--是否包含调用方的信息，false则无法打印类名方法名行号等-->
        <includeCallerData>true</includeCallerData>
        <!--One and only one appender may be attached to AsyncAppender，添加多个的话后面的会被忽略-->
        <appender-ref ref="debug_sql_json"/>
    </appender>

    <appender name="async_errorSqlJson" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>512</queueSize>
        <discardingThreshold>0</discardingThreshold>
        <maxFlushTime>500</maxFlushTime>
        <neverBlock>false</neverBlock>
        <includeCallerData>true</includeCallerData>
        <appender-ref ref="error_sql_json"/>
    </appender>

</included>